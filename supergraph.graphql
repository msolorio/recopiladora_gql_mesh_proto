
schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
  
  
  
  
  
  @link(
  url: "https://the-guild.dev/graphql/mesh/spec/v1.0"
  import: ["@httpOperation", "@transport", "@extraSchemaDefinitionDirective"]
)
{
  query: Query
  
  
}


  directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

  directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
    type: String
    external: Boolean
    override: String
    usedOverridden: Boolean
  ) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

  directive @join__graph(name: String!, url: String!) on ENUM_VALUE

  directive @join__implements(
    graph: join__Graph!
    interface: String!
  ) repeatable on OBJECT | INTERFACE

  directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    extension: Boolean! = false
    resolvable: Boolean! = true
    isInterfaceObject: Boolean! = false
  ) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

  directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

  scalar join__FieldSet


  directive @link(
    url: String
    as: String
    for: link__Purpose
    import: [link__Import]
  ) repeatable on SCHEMA

  scalar link__Import

  enum link__Purpose {
    """
    `SECURITY` features provide metadata necessary to securely resolve fields.
    """
    SECURITY

    """
    `EXECUTION` features provide metadata necessary for operation execution.
    """
    EXECUTION
  }







enum join__Graph {
  TODO_API @join__graph(name: "todoApi", url: "http://localhost:3000") 
}

directive @httpOperation(
  subgraph: String
  path: String
  operationSpecificHeaders: [[String]]
  httpMethod: HTTPMethod
  isBinary: Boolean
  requestBaseBody: ObjMap
  queryParamArgMap: ObjMap
  queryStringOptionsByParam: ObjMap
  jsonApiFields: Boolean
  queryStringOptions: ObjMap
) repeatable on FIELD_DEFINITION

directive @transport(
  subgraph: String
  kind: String
  location: String
  headers: [[String]]
  queryStringOptions: ObjMap
  queryParams: [[String]]
) repeatable on SCHEMA

directive @extraSchemaDefinitionDirective(directives: _DirectiveExtensions)  repeatable on OBJECT

scalar ObjMap @join__type(graph: TODO_API) 

scalar _DirectiveExtensions @join__type(graph: TODO_API) 

type Query @extraSchemaDefinitionDirective(
  directives: {transport: [{subgraph: "todoApi", kind: "rest", location: "http://localhost:3000", headers: [["Content-Type", "application/json"]]}]}
) @join__type(graph: TODO_API)  {
  todos: [query_todos_items] @httpOperation(subgraph: "todoApi", path: "/todos", httpMethod: GET) 
}

type query_todos_items @join__type(graph: TODO_API)  {
  id: Int
  name: String
  content: String
}

enum HTTPMethod @join__type(graph: TODO_API)  {
  GET @join__enumValue(graph: TODO_API) 
  HEAD @join__enumValue(graph: TODO_API) 
  POST @join__enumValue(graph: TODO_API) 
  PUT @join__enumValue(graph: TODO_API) 
  DELETE @join__enumValue(graph: TODO_API) 
  CONNECT @join__enumValue(graph: TODO_API) 
  OPTIONS @join__enumValue(graph: TODO_API) 
  TRACE @join__enumValue(graph: TODO_API) 
  PATCH @join__enumValue(graph: TODO_API) 
}
    
